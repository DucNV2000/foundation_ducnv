using System;
using UnityEngine;

// ReSharper disable InconsistentNaming
namespace Pancake.SaveData
{
	[UnityEngine.Scripting.Preserve]
	[Properties([propertyNames])]
	public class UserType_[typeSuffix] : CustomType
	{
		public static CustomType Instance = null;

		public UserType_[typeSuffix]() : base(typeof([fullType])){ Instance = this; priority = 1;}


		public override void Write(object obj, Writer writer)
		{
			var instance = ([fullType])obj;
			[writes]
		}

		public override object Read<T>(Reader reader)
		{
			var instance = new [fullType]();
			string propertyName;
			while((propertyName = reader.ReadPropertyName()) != null)
			{
				switch(propertyName)
				{
					[reads]
					default:
						reader.Skip();
						break;
				}
			}
			return instance;
		}
	}


	public class UserType_[typeSuffix]Array : CustomArrayType
	{
		public static CustomType Instance;

		public UserType_[typeSuffix]Array() : base(typeof([fullType][]), UserType_[typeSuffix].Instance)
		{
			Instance = this;
		}
	}
}